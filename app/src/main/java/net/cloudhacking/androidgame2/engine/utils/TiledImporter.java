package net.cloudhacking.androidgame2.engine.utils;

import android.util.Log;

import net.cloudhacking.androidgame2.engine.element.TileMap;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.util.ArrayList;

/**
 * Created by Andrew on 1/26/2015.
 */
public class TiledImporter extends Loggable {

    /**
     * This is an importer for json maps generated by the Tiled desktop app:
     *      http://www.mapeditor.org/
     */

    public static class Map implements TileMap.Map {

        private int[] mData;
        private int mWidth;
        private int mHeight;

        public Map(int[] data, int w, int h) {
            mData = data;
            mWidth = w;
            mHeight = h;
        }

        @Override
        public int getTile(int index) {
            return mData[index];
        }

        @Override
        public int getTile(int ix, int iy) {
            return mData[ ix + iy * mWidth ];
        }

        @Override
        public int getWidth() {
            return mWidth;
        }

        @Override
        public int getHeight() {
            return mHeight;
        }

    }


    public static ArrayList<Map> loadMaps(Resource jsonFile) {
        String jsonString = ResourceUtils.readTextFileFromRawResource(jsonFile.getId());
        ArrayList<Map> maps = new ArrayList<Map>();

        try {
            JSONObject obj = new JSONObject(jsonString);

            int width = obj.getInt("width");
            int height = obj.getInt("height");
            JSONArray layers = obj.getJSONArray("layers");
            Log.d("TiledImporter", "loading json map of height="+height+", width="+width);

            JSONObject layer;
            JSONArray tilemap;
            int[] data;
            for (int i=0; i<layers.length(); i++) {
                layer = layers.getJSONObject(i);
                tilemap = layer.getJSONArray("data");

                data = new int[ width * height ];
                int tile;
                for (int j=0; j<tilemap.length(); j++) {
                    tile = tilemap.getInt(j);
                    data[j] = tile > 0 ? tile-1 : (width * height)-2 ;
                }

                maps.add( new Map(data, width, height) );
            }

            return maps;

        } catch(JSONException e) {
            Log.d("TiledImporter", "unable to load json file:");
            e.printStackTrace();
            return null;
        }
    }


}
